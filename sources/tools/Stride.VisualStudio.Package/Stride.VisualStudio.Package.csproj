<Project>
  <PropertyGroup>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">15.0</VisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\..\..\build\</SolutionDir>
    <RestorePackages>true</RestorePackages>
  </PropertyGroup>
  <Import Project="..\..\targets\Stride.PreSettings.targets" />
  <Import Project="Sdk.props" Sdk="MSBuild.Sdk.Extras" Version="2.0.54" />
  <PropertyGroup>
    <TargetVsixContainerName>Stride.vsix</TargetVsixContainerName>
    <TargetVsixContainer>bin\$(TargetVsixContainerName)</TargetVsixContainer>
    <RootNamespace>Stride.VisualStudio</RootNamespace>
    <AssemblyTitle>Stride Plugin for Visual Studio</AssemblyTitle>
    <SignAssembly>false</SignAssembly>
    <AssemblyOriginatorKeyFile>Key.snk</AssemblyOriginatorKeyFile>
    <TargetFramework>$(StrideEditorTargetFramework)</TargetFramework>
    <StrideAssemblyProcessor>false</StrideAssemblyProcessor>
    <StrideBuildTags>WindowsTools</StrideBuildTags>
    <StrideSkipAutoPack>true</StrideSkipAutoPack>
    <VSSDKTargetPlatformRegRootSuffix>Stride</VSSDKTargetPlatformRegRootSuffix>
  </PropertyGroup>
  <ItemGroup>
    <None Remove="NShader\Common\HLSLKeywords.map" />
    <None Remove="NShader\Common\StrideShaderKeywords.map" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="EnvDTE80" Version="8.0.3" />
    <PackageReference Include="Microsoft.VisualStudio.Designer.Interfaces" Version="1.1.4323" />
    <PackageReference Include="Microsoft.VisualStudio.Editor" Version="16.4.280" />
    <PackageReference Include="Microsoft.VisualStudio.Language.StandardClassification" Version="16.4.280" />
    <PackageReference Include="Microsoft.VisualStudio.Package.LanguageService.14.0" Version="14.3.25407" />
    <PackageReference Include="Microsoft.VisualStudio.Shell.Interop.14.0.DesignTime" Version="14.3.26929" />
    <PackageReference Include="VSLangProj" Version="7.0.3301" />
    <PackageReference Include="Microsoft.VSSDK.BuildTools" Version="16.7.26">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>

    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.ComponentModel.Composition" />
    <Reference Include="System.Design" />
    <Reference Include="System.ServiceModel" />
    <Reference Include="System.Transactions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="PresentationCore" />
    <Reference Include="PresentationFramework" />
    <Reference Include="WindowsBase" />
    <Reference Include="System.Xaml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\..\assets\Stride.Core.Assets\PackageSessionHelper.Solution.cs">
      <Link>Assets\PackageSessionHelper.Solution.cs</Link>
    </Compile>
    <Compile Include="..\..\shared\Stride.NuGetResolver\RestoreHelper.cs" Link="NuGet\RestoreHelper.cs" />
  </ItemGroup>
  <ItemGroup>
    <Compile Update="BuildEngine\OutputClassifier.Partial.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>OutputClassifier.Partial.tt</DependentUpon>
    </Compile>
    <Compile Update="Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Update="Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
      <SubType>Designer</SubType>
    </EmbeddedResource>
    <EmbeddedResource Update="VSPackage.resx">
      <MergeWithCTO>true</MergeWithCTO>
      <ManifestResourceName>VSPackage</ManifestResourceName>
    </EmbeddedResource>
  </ItemGroup>
  <ItemGroup>
    <None Include="BuildEngine\OutputClassifier.Partial.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>OutputClassifier.Partial.cs</LastGenOutput>
    </None>
    <EmbeddedResource Update="NShader\Common\HLSLKeywords.map" />
    <EmbeddedResource Update="NShader\Common\StrideShaderKeywords.map" />
    <None Include="NShader\Common\ShaderMPLexer.lex" />
    <None Include="Stride.VisualStudio.Package.nuspec" />
    <None Include="source.extension.vsixmanifest">
      <SubType>Designer</SubType>
    </None>
  </ItemGroup>
  <ItemGroup>
    <None Include="Key.snk" />
  </ItemGroup>
  <ItemGroup>
    <VSCTCompile Include="StridePackage.vsct">
      <ResourceName>Menus.ctmenu</ResourceName>
      <SubType>Designer</SubType>
    </VSCTCompile>
  </ItemGroup>
  <ItemGroup>
    <None Include="Resources\VSPackage16.png" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="Resources\VSPackage.ico">
      <IncludeInVSIX>true</IncludeInVSIX>
    </Content>
    <Content Include="NShader\Common\ShaderMPLexer.lst" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="NShader\Common\HLSLKeywords.map" />
    <EmbeddedResource Include="NShader\Common\StrideShaderKeywords.map" />
  </ItemGroup>
  <ItemGroup>
    <Service Include="{508349B6-6B84-4DF5-91F0-309BEEBAD82D}" />
  </ItemGroup>
  <ItemGroup>
    <!-- NOTE: we need to include those manually otherwise we run into this issue: https://stackoverflow.com/questions/41832161/missing-builtprojectoutputgroupdependencies-building-vsix-depending-on-new-sim -->
    <ProjectReference Include="..\..\core\Stride.Core\Stride.Core.csproj" AdditionalProperties="TargetFramework=netstandard2.0" />
    <ProjectReference Include="..\..\core\Stride.Core.Mathematics\Stride.Core.Mathematics.csproj" AdditionalProperties="TargetFramework=netstandard2.0" />
    <ProjectReference Include="..\..\core\Stride.Core.IO\Stride.Core.IO.csproj" AdditionalProperties="TargetFramework=netstandard2.0" />
    <ProjectReference Include="..\..\core\Stride.Core.MicroThreading\Stride.Core.MicroThreading.csproj" AdditionalProperties="TargetFramework=netstandard2.0" />
    <ProjectReference Include="..\..\core\Stride.Core.Serialization\Stride.Core.Serialization.csproj" AdditionalProperties="TargetFramework=netstandard2.0" />
    <ProjectReference Include="..\..\core\Stride.Core.Design\Stride.Core.Design.csproj" AdditionalProperties="TargetFramework=$(TargetFramework)" />
    <ProjectReference Include="..\..\buildengine\Stride.Core.BuildEngine.Common\Stride.Core.BuildEngine.Common.csproj" AdditionalProperties="TargetFramework=$(TargetFramework)" />
    <ProjectReference Include="..\..\assets\Stride.Core.Packages\Stride.Core.Packages.csproj" AdditionalProperties="TargetFramework=$(TargetFramework)" />
    <ProjectReference Include="..\..\assets\Stride.Core.Assets\Stride.Core.Assets.csproj" AdditionalProperties="TargetFramework=$(TargetFramework)" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="NuGet\" />
  </ItemGroup>
  <Import Project="..\..\assets\Stride.Core.Assets.Yaml\Stride.Core.Assets.Yaml.projitems" Label="Shared" />
  <PropertyGroup>
    <UseCodebase>true</UseCodebase>
    <GetVsixSourceItemsDependsOn>$(GetVsixSourceItemsDependsOn);IncludeExtraAssemblies</GetVsixSourceItemsDependsOn>
  </PropertyGroup>
  <Target Name="IncludeExtraAssemblies">
    <ItemGroup>
      <VSIXCopyLocalReferenceSourceItem Include="$(TargetDir)\NuGet.*.dll" />
      <VSIXCopyLocalReferenceSourceItem Include="$(TargetDir)\ServiceWire.dll" />
    </ItemGroup>
  </Target>
  <Import Project="$(StridePostSettingsTargets)" />
  <!-- Force NET Sdk to be included before VsSDK -->
  <Import Project="Sdk.targets" Sdk="MSBuild.Sdk.Extras" Version="2.0.54" />
  <Import Project="$(VSToolsPath)\VSSDK\Microsoft.VsSDK.targets" Condition="Exists('$(VSToolsPath)\VSSDK\Microsoft.VsSDK.targets')" />
</Project>
