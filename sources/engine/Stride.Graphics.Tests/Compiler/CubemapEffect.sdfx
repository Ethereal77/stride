// Copyright (c) .NET Foundation and Contributors (https://dotnetfoundation.org)
// Copyright (c) 2018-2021 Stride and its contributors (https://stride3d.net)
// Copyright (c) 2011-2018 Silicon Studio Corp. (https://www.siliconstudio.co.jp)
// See the LICENSE.md file in the project root for full license information.

namespace Test
{
    effect CubemapDisplayEffect
    {
        using params MaterialParameters;

		mixin ShaderBase;
		mixin TransformationWAndVP;
		mixin AlbedoFlatShading;
        mixin compose albedoDiffuse = ComputeColorTextureCubeBasic<TexturingKeys.TextureCube0>;
    };

	effect CubemapEffect
	{
		using params MaterialParameters;

		mixin ShaderBase;
		mixin TransformationWAndVP;
		mixin AlbedoFlatShading;

		if (MaterialParameters.AlbedoDiffuse != null)
			mixin compose albedoDiffuse = MaterialParameters.AlbedoDiffuse;
        else
            mixin compose albedoDiffuse = ComputeColorTextureCubeReflect<TexturingKeys.TextureCube0>;
	};

    effect CubemapGeomEffect
    {
		using params MaterialParameters;

		mixin ShaderBase;
		mixin TransformationWAndVP;

        mixin macro MAX_VERTEX_COUNT = 9;
        mixin CameraCube;

		mixin AlbedoFlatShading;

        if (MaterialParameters.AlbedoDiffuse != null)
			mixin compose albedoDiffuse = MaterialParameters.AlbedoDiffuse;
    };

    effect CubemapIBLEffect
    {
        mixin StrideBaseShader;
        mixin child StrideGBufferShaderPass;
    };
}
