// Copyright (c) 2018-2020 Xenko and its contributors (https://xenko.com)
// Copyright (c) 2011-2018 Silicon Studio Corp. (https://www.siliconstudio.co.jp)
// Distributed under the MIT license. See the LICENSE.md file in the project root for more information.

namespace Xenko.Rendering.Materials
{
    /// <summary>
    /// Performs a Lambert shading
    /// </summary>
    shader MaterialSurfaceShadingSpecularBlinnPhong : IMaterialSurfaceShading, NormalStream
    {
        override float3 ComputeDirectLightContribution()
        {
            float k = BRDFBlinnPhong.Compute(streams.lightDirectionWS, streams.normalWS, streams.viewWS, streams.matSpecularPower);

            var specularColor = streams.matSpecular * (streams.matCavity * streams.matCavitySpecular);

            // TODO: integrate AO/Cavity...etc.
            // TODO: Check if we need to divide by PI
            return specularColor * (k * streams.lightSpecularColorNdotL * streams.matDiffuseSpecularAlphaBlend.y);
        }
    };
}
