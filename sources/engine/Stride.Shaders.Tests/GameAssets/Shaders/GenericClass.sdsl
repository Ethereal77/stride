// Copyright (c) .NET Foundation and Contributors (https://dotnetfoundation.org)
// Copyright (c) 2018-2021 Stride and its contributors (https://stride3d.net)
// Copyright (c) 2011-2018 Silicon Studio Corp. (https://www.siliconstudio.co.jp)
// See the LICENSE.md file in the project root for full license information.

shader GenericClass<
    Texture2D Texture,// = Texturing.Texture0,
    SamplerState Sampler,// = Texturing.Sampler,
    Semantic NAME, // = TEXCOORD0
    LinkType myLink,
    unorm float constFloat,
    int2 constInt2,
    uint3 constUInt3,
    float4 constUNormFloat4,
    float linkVariable
> : TestBaseClass<NAME, myLink, constUNormFloat4>
{
    [Link("GenericLink.myLink")]
    stage float3 uniformVariable;

    stage stream float2 texCoord : NAME;
    
    float genericCompute()
    {
        float4 value0 = TestBaseClass<NAME, myLink, constUNormFloat4>.Value;
        return streams.texCoord.x * Texture.Sample(Sampler, streams.texCoord).x;
    }
};
